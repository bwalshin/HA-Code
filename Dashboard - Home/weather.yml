type: vertical-stack
cards:
  - type: horizontal-stack
    cards:
      - type: custom:button-card
        entity: sensor.openweathermap_weather
        icon: |
          [[[ if (entity.state === 'clear sky')
          return "mdi:weather-sunny";
            if (entity.state === 'Sleet')
          return "mdi:hail";
            if (entity.state === 'Haze')
          return "mdi:haze";
            if (entity.state === 'squalls' || 
                entity.state === 'tornado')
          return "mdi:tornado";
            if (entity.state === 'scattered clouds' || 
                entity.state === 'broken clouds' || 
                entity.state === 'overcast clouds')
          return "mdi:weather-cloudy";
            if (entity.state === 'volcanic ash')
          return "mdi:weather-cloudy-alert";
            if (entity.state === 'mist' ||
                entity.state === 'Smoke' ||
                entity.state === 'fog')
          return "mdi:weather-fog";
            if (entity.state === 'thunderstorm' ||
                entity.state === 'light-thunderstorm' ||
                entity.state === 'heavy-thunderstorm' ||
                entity.state === 'ragged-thunderstorm')
          return "mdi:weather-lightning";
            if (entity.state === 'thunderstorm with light rain' || 
                entity.state === 'thunderstorm with rain' || 
                entity.state === 'thunderstorm with heavy rain' || 
                entity.state === 'thunderstorm with light drizzle' || 
                entity.state === 'thunderstorm with drizzle' || 
                entity.state === 'thunderstorm with heavy drizzle')
          return "mdi:weather-lightning-rainy";
            if (entity.state === 'few clouds')
          return "mdi:weather-partly-cloudy";
            if (entity.state === 'shower rain' || 
                entity.state === 'light intensity drizzle' || 
                entity.state === 'drizzle' || 
                entity.state === 'heavy intensity drizzle' || 
                entity.state === 'light intesity drizzle rain' || 
                entity.state === 'drizzle rain' || 
                entity.state === 'heavy intensity drizzle rain' || 
                entity.state === 'shower rain and drizzle' || 
                entity.state === 'heavy shower rain and drizzle' || 
                entity.state === 'light intensity shower rain' || 
                entity.state === 'shower rain' || 
                entity.state === 'heavy intensity shower rain' || 
                entity.state === 'ragged shower rain')
          return "mdi:weather-partly-rainy";
            if (entity.state === 'Light rain and snow' ||
                entity.state === 'Rain and snow' || 
                entity.state === 'Light shower snow')
          return "mdi:weather-partly-snowy-rainy";
            if (entity.state === 'rain' || 
                entity.state === 'light rain' || 
                entity.state === 'moderate rain' || 
                entity.state === 'heavy intensity rain' || 
                entity.state === 'very heavy rain' || 
                entity.state === 'extreme rain')
          return "mdi:weather-pouring";
            if (entity.state === 'light snow' || 
                entity.state === 'Snow' || 
                entity.state === 'Light shower sleet' || 
                entity.state === 'Shower sleet' || 
                entity.state === 'Shower snow')
          return "mdi:weather-snowy";
            if (entity.state === 'Heavy snow' ||
                entity.state === 'Heavy shower snow')
          return "mdi:weather-partly-snowy-heavy";
            if (entity.state === 'freezing rain')
          return "mdi:weather-snowy-rainy";
            if (entity.state === 'sand/ dust whirls' ||
                entity.state === 'sand' ||
                entity.state === 'dust')
          return "mdi:weather-windy";
          else
          return "mdi:information-off-outline";
          ]]]
        show_state: true
        show_name: false
        aspect_ratio: 1/1
        styles:
          state:
            - align-self: center
            - justify-self: center
            - font-size: 12px
          img_cell:
            - align-self: center
            - justify-self: center
            - padding-top: 25%
            - margin: none
          icon:
            - width: 70%
            - margin-top: '-10%'
          card:
            - border-radius: 10%
            - padding: 10%
            - color: ivory
            - text-shadow: 0px 0px 5px black
            - text-transform: capitalize
      - type: custom:button-card
        entity: sensor.openweathermap_temperature
        name: Outside
        show_state: true
        show_name: true
        show_icon: false
        aspect_ratio: 1/1
        styles:
          name:
            - align-self: center
            - justify-self: center
            - font-size: 12px
          state:
            - font-weight: bold
            - align-self: center
            - justify-self: center
            - padding-top: 30%
            - color: >
                [[[ if( states["sensor.openweathermap_temperature"].state <= 0){
                return '#9b2fad'; } else
                if(states["sensor.openweathermap_temperature"].state <= 10){
                return '#663fb4'; } else
                if(states["sensor.openweathermap_temperature"].state <= 20){
                return '#4055b1'; } else
                if(states["sensor.openweathermap_temperature"].state <= 30){
                return '#587cf7'; } else
                if(states["sensor.openweathermap_temperature"].state <= 40){
                return '#1eaaf0'; } else
                if(states["sensor.openweathermap_temperature"].state <= 50){
                return '#20bcd1'; } else
                if(states["sensor.openweathermap_temperature"].state <= 60){
                return '#159587'; } else
                if(states["sensor.openweathermap_temperature"].state <= 70){
                return '#2d9a2d'; } else
                if(states["sensor.openweathermap_temperature"].state <= 80){
                return '#8cc051'; } else
                if(states["sensor.openweathermap_temperature"].state <= 90){
                return '#fdc030'; } else
                if(states["sensor.openweathermap_temperature"].state <= 100){
                return '#fd9728'; } else
                if(states["sensor.openweathermap_temperature"].state >= 101){
                return '#fb582f'; } else { return 'black'; } ]]]
          grid:
            - grid-template-areas: '"s" "n"'
            - grid-template-columns: 1fr
            - grid-template-rows: min-content min-content
          card:
            - border-radius: 10%
            - padding: 10%
            - color: ivory
            - text-shadow: 0px 0px 5px black
            - text-transform: capitalize
      - type: custom:button-card
        entity: sensor.openweathermap_humidity
        name: Humidity
        show_state: true
        show_name: true
        show_icon: false
        aspect_ratio: 1/1
        styles:
          name:
            - align-self: center
            - justify-self: center
            - font-size: 12px
          state:
            - font-weight: bold
            - align-self: center
            - justify-self: center
            - padding-top: 30%
            - color: >
                [[[ if(
                states["sensor.ble_temperature_monstera_deliciosa"].state <= 0){
                return '#E9343A'; } else
                if(states["sensor.ble_temperature_monstera_deliciosa"].state <=
                15){ return '#F98704'; } else
                if(states["sensor.ble_temperature_monstera_deliciosa"].state <=
                20){ return '#FAA826'; } else
                if(states["sensor.ble_temperature_monstera_deliciosa"].state <=
                35){ return '#FDD125'; } else
                if(states["sensor.ble_temperature_monstera_deliciosa"].state <=
                40){ return '#49CE4C'; } else
                if(states["sensor.ble_temperature_monstera_deliciosa"].state <=
                50){ return '##FDD125'; } else
                if(states["sensor.ble_temperature_monstera_deliciosa"].state <=
                60){ return '#FAA826'; } else
                if(states["sensor.ble_temperature_monstera_deliciosa"].state <=
                65){ return '#F98704'; } else
                if(states["sensor.ble_temperature_monstera_deliciosa"].state <=
                80){ return '#E9343A'; } else { return 'black'; } ]]]
          grid:
            - grid-template-areas: '"s" "n"'
            - grid-template-columns: 1fr
            - grid-template-rows: min-content min-content
          card:
            - border-radius: 10%
            - padding: 10%
            - color: ivory
            - text-shadow: 0px 0px 5px black
            - text-transform: capitalize
      - type: custom:button-card
        entity: sensor.u_s_air_quality_index
        name: PM2.5
        show_state: true
        show_name: true
        show_icon: false
        aspect_ratio: 1/1
        styles:
          name:
            - align-self: center
            - justify-self: center
            - font-size: 12px
          state:
            - font-weight: bold
            - align-self: center
            - justify-self: center
            - padding-top: 30%
            - color: |
                [[[
                if(states["sensor.u_s_air_quality_index"].state == 0){
                return '#49CE4C';
                } else if(states["sensor.u_s_air_quality_index"].state <= 50){
                return '#49CE4C';
                } else if(states["sensor.u_s_air_quality_index"].state <= 100){
                return '#FDD125';
                } else if(states["sensor.u_s_air_quality_index"].state <= 150){
                return '#F98704';
                } else if(states["sensor.u_s_air_quality_index"].state <= 200){
                return '#E9343A';
                } else if(states["sensor.u_s_air_quality_index"].state <= 300){
                return '#a97bbc';
                } else if(states["sensor.u_s_air_quality_index"].state <= 500){
                return '#9e5775';
                } else {
                return '#879eac';
                }
                ]]]
          grid:
            - grid-template-areas: '"s" "n"'
            - grid-template-columns: 1fr
            - grid-template-rows: min-content min-content
          card:
            - border-radius: 10%
            - padding: 10%
            - color: ivory
            - text-shadow: 0px 0px 5px black
            - text-transform: capitalize
  - type: horizontal-stack
    cards:
      - type: custom:button-card
        entity: sensor.ble_temperature_monstera_deliciosa
        name: Downstairs
        units: ºF
        show_state: true
        show_name: true
        show_icon: false
        aspect_ratio: 1/1
        styles:
          name:
            - align-self: center
            - justify-self: center
            - font-size: 12px
          state:
            - font-weight: bold
            - align-self: center
            - justify-self: center
            - padding-top: 30%
            - color: >
                [[[

                if(states["sensor.ble_temperature_monstera_deliciosa"].state <=
                0){

                return '#9b2fad';

                } else
                if(states["sensor.ble_temperature_monstera_deliciosa"].state <=
                10){

                return '#663fb4';

                } else
                if(states["sensor.ble_temperature_monstera_deliciosa"].state <=
                20){

                return '#4055b1';

                } else
                if(states["sensor.ble_temperature_monstera_deliciosa"].state <=
                30){

                return '#587cf7';

                } else
                if(states["sensor.ble_temperature_monstera_deliciosa"].state <=
                40){

                return '#1eaaf0';

                } else
                if(states["sensor.ble_temperature_monstera_deliciosa"].state <=
                50){

                return '#20bcd1';

                } else
                if(states["sensor.ble_temperature_monstera_deliciosa"].state <=
                60){

                return '#159587';

                } else
                if(states["sensor.ble_temperature_monstera_deliciosa"].state <=
                70){

                return '#2d9a2d';

                } else
                if(states["sensor.ble_temperature_monstera_deliciosa"].state <=
                80){

                return '#8cc051';

                } else
                if(states["sensor.ble_temperature_monstera_deliciosa"].state <=
                90){

                return '#fdc030';

                } else
                if(states["sensor.ble_temperature_monstera_deliciosa"].state <=
                100){

                return '#fd9728';

                } else
                if(states["sensor.ble_temperature_monstera_deliciosa"].state >=
                101){

                return '#fb582f';

                } else {

                return 'black';

                }

                ]]]
          grid:
            - grid-template-areas: '"s" "n"'
            - grid-template-columns: 1fr
            - grid-template-rows: min-content min-content
          card:
            - border-radius: 10%
            - padding: 10%
            - color: ivory
            - text-shadow: 0px 0px 5px black
            - text-transform: capitalize
      - type: custom:button-card
        entity: sensor.awair_element_temperature
        name: Upstairs
        units: ºF
        show_state: true
        show_name: true
        show_icon: false
        aspect_ratio: 1/1
        styles:
          name:
            - align-self: center
            - justify-self: center
            - font-size: 12px
          state:
            - font-weight: bold
            - align-self: center
            - justify-self: center
            - padding-top: 30%
            - color: >
                [[[

                if(states["sensor.awair_element_temperature"].state <= 0){

                return '#9b2fad';

                } else if(states["sensor.awair_element_temperature"].state <=
                10){

                return '#663fb4';

                } else if(states["sensor.awair_element_temperature"].state <=
                20){

                return '#4055b1';

                } else if(states["sensor.awair_element_temperature"].state <=
                30){

                return '#587cf7';

                } else if(states["sensor.awair_element_temperature"].state <=
                40){

                return '#1eaaf0';

                } else if(states["sensor.awair_element_temperature"].state <=
                50){

                return '#20bcd1';

                } else if(states["sensor.awair_element_temperature"].state <=
                60){

                return '#159587';

                } else if(states["sensor.awair_element_temperature"].state <=
                70){

                return '#2d9a2d';

                } else if(states["sensor.awair_element_temperature"].state <=
                80){

                return '#8cc051';

                } else if(states["sensor.awair_element_temperature"].state <=
                90){

                return '#fdc030';

                } else if(states["sensor.awair_element_temperature"].state <=
                100){

                return '#fd9728';

                } else if(states["sensor.awair_element_temperature"].state >=
                101){

                return '#fb582f';

                } else {

                return 'black';

                }

                ]]]
          grid:
            - grid-template-areas: '"s" "n"'
            - grid-template-columns: 1fr
            - grid-template-rows: min-content min-content
          card:
            - border-radius: 10%
            - padding: 10%
            - color: ivory
            - text-shadow: 0px 0px 5px black
            - text-transform: capitalize
      - type: custom:button-card
        entity: sensor.u_s_air_quality_index
        name: PM2.5
        show_state: true
        show_name: true
        show_icon: false
        aspect_ratio: 1/1
        styles:
          name:
            - align-self: center
            - justify-self: center
            - font-size: 12px
          state:
            - font-weight: bold
            - align-self: center
            - justify-self: center
            - padding-top: 30%
            - color: |
                [[[
                if(states["sensor.u_s_air_quality_index"].state == 0){
                return '#49CE4C';
                } else if(states["sensor.u_s_air_quality_index"].state <= 50){
                return '#49CE4C';
                } else if(states["sensor.u_s_air_quality_index"].state <= 100){
                return '#FDD125';
                } else if(states["sensor.u_s_air_quality_index"].state <= 150){
                return '#F98704';
                } else if(states["sensor.u_s_air_quality_index"].state <= 200){
                return '#E9343A';
                } else if(states["sensor.u_s_air_quality_index"].state <= 300){
                return '#a97bbc';
                } else if(states["sensor.u_s_air_quality_index"].state <= 500){
                return '#9e5775';
                } else {
                return '#879eac';
                }
                ]]]
          grid:
            - grid-template-areas: '"s" "n"'
            - grid-template-columns: 1fr
            - grid-template-rows: min-content min-content
          card:
            - border-radius: 10%
            - padding: 10%
            - color: ivory
            - text-shadow: 0px 0px 5px black
            - text-transform: capitalize
      - type: custom:button-card
        entity: sensor.openweathermap_forecast_pressure
        name: Pressure
        show_state: true
        show_name: true
        show_icon: false
        aspect_ratio: 1/1
        styles:
          name:
            - align-self: center
            - justify-self: center
            - font-size: 12px
          state:
            - font-weight: bold
            - align-self: center
            - justify-self: center
            - padding-top: 30%
          grid:
            - grid-template-areas: '"s" "n"'
            - grid-template-columns: 1fr
            - grid-template-rows: min-content min-content
          card:
            - border-radius: 10%
            - padding: 10%
            - color: ivory
            - text-shadow: 0px 0px 5px black
            - text-transform: capitalize
